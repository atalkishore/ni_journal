<div class="container-fluid mt-4">
  <div class="row">
    <div class="col-md-3"><%- include('../partials/_Sidebar.ejs') %></div>
    <div class="col-md-9">
      <div class="card shadow p-4">
        <div class="d-flex justify-content-between align-items-center">
          <h3 class="text-primary text-start mb-3">Add New Trade</h3>
          <button
            id="linkTradeButton"
            class="btn btn-outline-primary"
            data-bs-toggle="modal"
            data-bs-target="#linkTradeModal"
          >
            <i class="fa-solid fa-link"></i>
            Link Trade
          </button>
        </div>

        <form id="addTradeForm" class="row g-2 needs-validation" novalidate>
          <div class="col-md-6">
            <label for="tradeDateTime" class="form-label"
              >Trade Date and Time*</label
            >
            <input
              type="datetime-local"
              id="tradeDateTime"
              name="tradeDateTime"
              class="form-control"
              max=""
              required
            />
            <div class="invalid-feedback">
              Please provide a valid trade date and time.
            </div>
          </div>
          <div class="col-md-6">
            <label for="instrument" class="form-label">Instrument*</label>
            <select
              id="instrument"
              name="instrument"
              class="form-select"
              required
            >
              <option selected disabled value="">Choose...</option>
              <option value="Stock">Stock</option>
              <option value="Option">Option</option>
              <option value="Futures">Futures</option>
            </select>
            <div class="invalid-feedback">
              Please select a valid instrument.
            </div>
          </div>

          <div class="col-md-4">
            <label for="symbol" class="form-label">Symbol*</label>
            <input
              type="text"
              id="symbol"
              name="symbol"
              class="form-control"
              required
            />
            <div class="invalid-feedback">Please provide a valid symbol.</div>
          </div>

          <div class="col-md-2">
            <label for="quantity" class="form-label">Quantity*</label>
            <input
              type="number"
              id="quantity"
              name="quantity"
              class="form-control"
              required
            />
            <div class="invalid-feedback">Please provide a valid Quantity.</div>
          </div>

          <div class="col-md-6">
            <label for="position" class="form-label">Position*</label>
            <select id="position" name="position" class="form-select" required>
              <option selected disabled value="">Choose...</option>
              <option value="Buy">Buy</option>
              <option value="Sell">Sell</option>
            </select>
            <div class="invalid-feedback">Please select a valid position.</div>
          </div>

          <div class="col-md-4">
            <label for="Price" class="form-label">Price*</label>
            <input
              type="number"
              id="entryPrice"
              name="entryPrice"
              class="form-control"
              required
            />
            <div class="invalid-feedback">Please provide a valid price.</div>
          </div>
          <div class="col-md-4">
            <label for="targetPrice" class="form-label">Target Price</label>
            <input
              type="number"
              id="targetPrice"
              name="targetPrice"
              class="form-control"
            />
            <div class="invalid-feedback">
              Please provide a valid target price.
            </div>
          </div>
          <div class="col-md-4">
            <label for="stopLoss" class="form-label">Stop Loss</label>
            <input
              type="number"
              id="stopLoss"
              name="stopLoss"
              class="form-control"
            />
            <div class="invalid-feedback">
              Please provide a valid stop loss.
            </div>
          </div>

          <div class="col-md-6">
            <label for="tags" class="form-label">Tags</label>
            <div
              id="tagsInput"
              class="form-control"
              contenteditable="true"
            ></div>
            <div id="tagsList" class="d-flex flex-wrap gap-1 mt-2"></div>
            <small class="text-muted">Press Enter to add tags (max 20).</small>
          </div>

          <div class="col-md-6">
            <label for="transactionCost" class="form-label"
              >Brokerage/Transaction Cost</label
            >
            <input
              type="number"
              id="transactionCost"
              name="transactionCost"
              class="form-control"
              value="0.00"
            />
            <div class="invalid-feedback">
              Please provide a valid transaction cost.
            </div>
          </div>

          <div class="col-md-7">
            <label for="strategies" class="form-label">Strategies</label>
            <select id="strategies" name="strategies" class="form-select">
              <option selected disabled value="">Choose...</option>
              <option value="Scalping">Scalping</option>
              <option value="Swing">Swing</option>
              <option value="Day Trading">Day Trading</option>
              <option value="Position">Position</option>
            </select>
            <div class="invalid-feedback">Please select a valid strategy.</div>
          </div>

          <div class="col-md-5" style="margin-top: 10px">
            <label class="form-label" style="margin-left: 45px"
              >Screenshots (Max 3)</label
            >
            <div class="d-flex gap-4">
              <div
                class="border border-secondary rounded p-2 d-flex align-items-center justify-content-center"
                style="
                  width: 60px;
                  height: 60px;
                  cursor: pointer;
                  margin-left: 45px;
                "
              >
                <input
                  type="file"
                  class="form-control d-none"
                  accept="image/*"
                />
                <i class="fa-solid fa-plus text-secondary"></i>
              </div>
              <div
                class="border border-secondary rounded p-2 d-flex align-items-center justify-content-center"
                style="width: 60px; height: 60px; cursor: pointer"
              >
                <input
                  type="file"
                  class="form-control d-none"
                  accept="image/*"
                />
                <i class="fa-solid fa-plus text-secondary"></i>
              </div>
              <div
                class="border border-secondary rounded p-2 d-flex align-items-center justify-content-center"
                style="width: 60px; height: 60px; cursor: pointer"
              >
                <input
                  type="file"
                  class="form-control d-none"
                  accept="image/*"
                />
                <i class="fa-solid fa-plus text-secondary"></i>
              </div>
            </div>
          </div>

          <div class="col-md-12">
            <label for="tradeNotes" class="form-label">Trade Notes</label>
            <textarea
              id="tradeNotes"
              name="tradeNotes"
              class="form-control"
              rows="4"
            ></textarea>
            <div class="invalid-feedback">
              Please provide valid trade notes.
            </div>
          </div>

          <div class="text-center">
            <button type="submit" class="btn btn-outline-primary">
              Add Trade
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<div
  class="modal fade"
  id="linkTradeModal"
  tabindex="-1"
  aria-labelledby="linkTradeModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="linkTradeModalLabel">Link Trade</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <table class="table table-striped" id="tradesTable">
          <thead>
            <tr>
              <th>
                <input type="checkbox" id="selectAllTrades" />
              </th>
              <th>Trade Date</th>
              <th>Instrument</th>
              <th>Symbol</th>
              <th>Position</th>
              <th>Entry Price</th>
            </tr>
          </thead>
          <tbody id="tradeListBody"></tbody>
        </table>
      </div>
      <div class="modal-footer">
        <button
          type="button"
          class="btn btn-outline-secondary"
          data-bs-dismiss="modal"
        >
          Cancel
        </button>
        <button type="button" id="confirmLinkButton" class="btn btn-primary">
          Confirm Link
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  function fetchTrades() {
    $.ajax({
      url: '/api/journal/trades',
      type: 'GET',
      success: function (trades) {
        const tradeListBody = $('#tradeListBody');
        tradeListBody.empty();
        trades.forEach((trade) => {
          const row = `
            <tr>
              <td>
                <input
                  type="checkbox"
                  class="trade-checkbox"
                  data-trade-id="${trade._id}"
                />
              </td>
              <td>${new Date(trade.tradeDate).toLocaleString()}</td>
              <td>${trade.instrument}</td>
              <td>${trade.symbol}</td>
              <td>${trade.position}</td>
              <td>${trade.entryPrice}</td>
            </tr>
          `;
          tradeListBody.append(row);
        });

        $('#selectAllTrades').on('change', function () {
          const isChecked = $(this).is(':checked');
          $('.trade-checkbox').prop('checked', isChecked);
        });
      },
      error: function (xhr) {
        alert('Error fetching trades: ' + xhr.responseJSON.message);
      },
    });
  }

  function confirmLinkTrades() {
    const selectedTradeIds = [];
    $('.trade-checkbox:checked').each(function () {
      selectedTradeIds.push($(this).data('trade-id'));
    });

    if (selectedTradeIds.length === 0) {
      alert('Please select at least one trade to link.');
      return;
    }

    $.ajax({
      url: '/api/journal/linkTrades',
      type: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ tradeIds: selectedTradeIds }),
      success: function (response) {
        alert('Trades successfully linked!');
        $('#linkTradeModal').modal('hide');
      },
      error: function (xhr) {
        alert('Error linking trades: ' + xhr.responseJSON.message);
      },
    });
  }

  $('#linkTradeModal').on('show.bs.modal', function () {
    fetchTrades();
  });

  $('#confirmLinkButton').on('click', function () {
    confirmLinkTrades();
  });

  const tagsInput = document.getElementById('tagsInput');
  const tagsList = document.getElementById('tagsList');
  let tags = [];

  tagsInput.addEventListener('keydown', (e) => {
    if (e.key === 'Enter' && tags.length < 20) {
      e.preventDefault();
      const tag = tagsInput.textContent.trim();
      if (tag && !tags.includes(tag)) {
        tags.push(tag);
        const chip = document.createElement('div');
        chip.className = 'tag-chip';
        chip.innerHTML = `${tag} <span class="remove-tag">&times;</span>`;

        chip.querySelector('.remove-tag').addEventListener('click', () => {
          tagsList.removeChild(chip);
          tags = tags.filter((t) => t !== tag);
        });
        tagsList.appendChild(chip);
        tagsInput.textContent = '';
      }
    }
  });

  const tradeDateTimeInput = document.getElementById('tradeDateTime');

  function setMaxDateTime() {
    const now = new Date();
    const formattedDateTime = now.toISOString().slice(0, 16);
    tradeDateTimeInput.setAttribute('max', formattedDateTime);
  }

  document.addEventListener('DOMContentLoaded', setMaxDateTime);
</script>

<style>
  .tag-chip {
    background-color: #007bff;
    color: white;
    padding: 5px 10px;
    border-radius: 16px;
    font-size: 12px;
    display: inline-flex;
    align-items: center;
  }
  .tag-chip .remove-tag {
    margin-left: 5px;
    cursor: pointer;
    font-size: 14px;
  }
</style>

<script>
  (() => {
    'use strict';
    const forms = document.querySelectorAll('.needs-validation');
    Array.from(forms).forEach((form) => {
      form.addEventListener(
        'submit',
        (event) => {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          } else {
            event.preventDefault();
            submitTrade();
          }
          form.classList.add('was-validated');
        },
        false
      );
    });
  })();

  function submitTrade() {
    const tradeData = {
      tradeDate: $('#tradeDateTime').val(),
      instrument: $('#instrument').val(),
      symbol: $('#symbol').val(),
      quantity: parseFloat($('#quantity').val()),
      position: $('#position').val(),
      entryPrice: parseFloat($('#entryPrice').val()),
      targetPrice: parseFloat($('#targetPrice').val() || 0),
      stopLoss: parseFloat($('#stopLoss').val() || 0),
      strategy: $('#strategies').val(),
      transactionCost: parseFloat($('#transactionCost').val() || 0),
      tradeNotes: $('#tradeNotes').val(),
      tags: $('#tagsList .tag-chip')
        .map(function () {
          return $(this).text().trim();
        })
        .get(),
    };

    $.ajax({
      url: '/api/journal/addTrade',
      type: 'POST',
      contentType: 'application/json',
      data: JSON.stringify(tradeData),
      success: function (response) {
        alert(response.message);
        window.location.href = '/journal/trades';
      },
      error: function (xhr) {
        alert('Error adding trade: ' + xhr.responseJSON.message);
      },
    });
  }
</script>
