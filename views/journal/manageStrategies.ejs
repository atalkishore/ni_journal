<div class="container mt-4">
  <div class="row">
    <div class="col-md-3"><%- include('../partials/_Sidebar.ejs') %></div>

    <div class="col-md-9">
      <div class="card">
        <div
          class="card-header bg-info text-white d-flex justify-content-between align-items-center"
        >
          <h5 class="fw-bold mb-0">Manage Strategies</h5>
          <button
            id="addStrategyButton"
            class="btn btn-warning me-1 mb-1"
            data-bs-toggle="modal"
            data-bs-target="#addStrategyModal"
          >
            <i class="fa-solid fa-plus"></i> Add Strategy
          </button>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table
              class="table table-hover table-striped align-middle border rounded"
            >
              <thead class="table-primary text-center">
                <tr>
                  <th class="fw-bold">Name</th>
                  <th class="fw-bold">ID</th>
                  <th class="fw-bold">User ID</th>
                  <th class="fw-bold">Created At</th>
                  <th class="fw-bold">Updated At</th>
                  <th class="fw-bold">Actions</th>
                </tr>
              </thead>
              <tbody id="strategyTableBody"></tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div
  class="modal fade"
  id="addStrategyModal"
  tabindex="-1"
  aria-labelledby="addStrategyModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-info text-black">
        <h5 class="modal-title" id="addStrategyModalLabel">Add New Strategy</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <form id="addStrategyForm">
          <div class="mb-3">
            <label for="strategyName" class="form-label"
              >Name of Strategy</label
            >
            <input
              type="text"
              class="form-control"
              id="strategyName"
              placeholder="Enter strategy name"
              required
            />
          </div>
          <button type="submit" class="btn btn-outline-success me-1 mb-1">
            Add Strategy
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<div
  class="modal fade"
  id="editStrategyModal"
  tabindex="-1"
  aria-labelledby="editStrategyModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-info text-white">
        <h5 class="modal-title" id="editStrategyModalLabel">Edit Strategy</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <form id="editStrategyForm">
          <input type="hidden" id="editStrategyId" />
          <div class="mb-3">
            <label for="editStrategyName" class="form-label"
              >Name of Strategy</label
            >
            <input
              type="text"
              class="form-control"
              id="editStrategyName"
              placeholder="Enter strategy name"
              required
            />
          </div>
          <button type="submit" class="btn btn-outline-info me-1 mb-1">
            Update Strategy
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  $(document).ready(function () {
    const MAX_STRATEGIES = 10;

    const fetchStrategies = () => {
      $.ajax({
        url: '/api/journal/strategies',
        type: 'GET',
        success: function (strategies) {
          const tableBody = $('#strategyTableBody');
          tableBody.empty();

          strategies.forEach((strategy) => {
            tableBody.append(`
              <tr>
                <td>${strategy.name}</td>
                <td>${strategy._id}</td>
                <td>1</td>
                <td>${new Date(strategy.createdAt).toLocaleString()}</td>
                <td>${strategy.updatedAt ? new Date(strategy.updatedAt).toLocaleString() : '-'}</td>
                <td>
                  <button class="btn btn-outline-info me-1 mb-1 editStrategyButton"  style ="font-size: 12px; padding: 2px 6px;"data-id="${strategy._id}" data-name="${strategy.name}">
                    <i class="uil uil-edit"></i> Edit
                  </button>
                </td>
              </tr>
            `);
          });

          if (strategies.length >= MAX_STRATEGIES) {
            $('#addStrategyButton')
              .prop('disabled', true)
              .attr('title', 'Maximum strategies limit reached.');
          } else {
            $('#addStrategyButton').prop('disabled', false).removeAttr('title');
          }

          $('.editStrategyButton').on('click', function () {
            const strategyId = $(this).data('id');
            const strategyName = $(this).data('name');

            $('#editStrategyId').val(strategyId);
            $('#editStrategyName').val(strategyName);
            $('#editStrategyModal').modal('show');
          });
        },
        error: function () {
          alert('Failed to fetch strategies. Please try again.');
        },
      });
    };

    $('#addStrategyForm').on('submit', function (e) {
      e.preventDefault();
      const strategyName = $('#strategyName').val();

      $.ajax({
        url: '/api/journal/strategies',
        type: 'GET',
        success: function (strategies) {
          if (strategies.length >= MAX_STRATEGIES) {
            alert('You cannot add more than 10 strategies.');
            return;
          }

          $.ajax({
            url: '/api/journal/addStrategy',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ name: strategyName }),
            success: function () {
              $('#addStrategyModal').modal('hide');
              $('#strategyName').val('');
              fetchStrategies();

              const toastHtml = `<div class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" style="position: fixed; top: 20px; right: 20px; z-index: 1055;">
                <div class="d-flex">
                  <div class="toast-body">
                    <span class="fas fa-check-circle text-white me-2"></span>
                    Strategy added successfully!
                  </div>
                  <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
              </div>`;

              const toastContainer = $(toastHtml);
              $('body').append(toastContainer);
              const toast = new bootstrap.Toast(toastContainer[0]);
              toast.show();

              setTimeout(() => {
                toast.hide();
              }, 2000);

              toastContainer.on('hidden.bs.toast', function () {
                toastContainer.remove();
              });
            },
            error: function () {
              alert('Failed to add strategy. Please try again.');
            },
          });
        },
        error: function () {
          alert('Failed to check strategy count. Please try again.');
        },
      });
    });

    $('#editStrategyForm').on('submit', function (e) {
      e.preventDefault();

      const strategyId = $('#editStrategyId').val();
      const strategyName = $('#editStrategyName').val();

      $.ajax({
        url: `/api/journal/editStrategy/${strategyId}`,
        type: 'PUT',
        contentType: 'application/json',
        data: JSON.stringify({ name: strategyName }),
        success: function () {
          $('#editStrategyModal').modal('hide');
          fetchStrategies();
          alert('Strategy updated successfully!');
        },
        error: function () {
          alert('Failed to update strategy. Please try again.');
        },
      });
    });

    fetchStrategies();
  });
</script>
