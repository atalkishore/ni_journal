# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy-to-vps-hosting-from-main
'on':
  push:
    branches:
      - prod-deploy
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH into remote server
        uses: appleboy/ssh-action@master
        with:
          host: 91.108.105.210
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd /var/myprojects/ni_journal_prod
            git reset --hard
            git clean -df
            git checkout prod-deploy
            git reset --hard
            git clean -df
            git pull origin prod-deploy
            echo "${{ secrets.PROD_ENC_KEY }}" | openssl enc -d -aes-256-cbc -salt -pbkdf2  -iter 100000 -in deployment/prod/sec1.enc -out deployment/prod/env.list
            mv -f deployment/prod/* .
            cd /var/myprojects/ni_journal_prod
            docker build --build-arg IMAGE_NAME=prod_ni_journal_img --build-arg IMAGE_TAG=latest -t prod_ni_journal_img:latest .

            service_name="prod_0_ni_journal"
            running_containers=$(docker compose ps --filter "status=running" --format "{{.Names}}" | grep -v $service_name)
            running_containers+=" $service_name"

            # Loop through each running container
            for container in $running_containers; do
                echo "Stopping container: $container"
                docker-compose stop $container
                docker-compose rm -f $container

                echo "Starting container: $container"
                docker-compose up -d $container
            done
            docker rmi $(docker images -f "dangling=true" -q)

            echo "All containers have been restarted."

            # docker stack deploy -c docker-compose.yml prod_uistack
